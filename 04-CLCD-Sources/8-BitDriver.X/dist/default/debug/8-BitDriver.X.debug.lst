

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Nov 03 10:05:45 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 18/08/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0008                     _PORTD	set	8
   233     0049                     _RE1	set	73
   234     004A                     _RE2	set	74
   235     0088                     _TRISD	set	136
   236     0449                     _TRISE1	set	1097
   237     044A                     _TRISE2	set	1098
   238                           
   239                           	psect	strings
   240     0003                     __pstrings:
   241     0003                     stringtab:
   242     0003                     __stringtab:
   243     0003                     stringcode:	
   244                           ;	String table - string pointers are 1 byte each
   245                           
   246     0003                     stringdir:
   247     0003  3000               	movlw	high stringdir
   248     0004  008A               	movwf	10
   249     0005  0804               	movf	4,w
   250     0006  0A84               	incf	4,f
   251     0007  0782               	addwf	2,f
   252     0008                     __stringbase:
   253     0008  3400               	retlw	0
   254     0009                     __end_of__stringtab:
   255     0009                     STR_4:
   256     0009  3445               	retlw	69	;'E'
   257     000A  344D               	retlw	77	;'M'
   258     000B  3442               	retlw	66	;'B'
   259     000C  3445               	retlw	69	;'E'
   260     000D  3444               	retlw	68	;'D'
   261     000E  3444               	retlw	68	;'D'
   262     000F  3445               	retlw	69	;'E'
   263     0010  3444               	retlw	68	;'D'
   264     0011  3400               	retlw	0
   265     0012                     STR_3:
   266     0012  3457               	retlw	87	;'W'
   267     0013  346F               	retlw	111	;'o'
   268     0014  3472               	retlw	114	;'r'
   269     0015  346C               	retlw	108	;'l'
   270     0016  3464               	retlw	100	;'d'
   271     0017  3400               	retlw	0
   272     0018                     STR_2:
   273     0018  3448               	retlw	72	;'H'
   274     0019  3465               	retlw	101	;'e'
   275     001A  346C               	retlw	108	;'l'
   276     001B  346C               	retlw	108	;'l'
   277     001C  346F               	retlw	111	;'o'
   278     001D  3400               	retlw	0
   279     001E                     STR_1:
   280     001E  3448               	retlw	72	;'H'
   281     001F  3400               	retlw	0
   282                           
   283                           	psect	cinit
   284     07FC                     start_initialization:	
   285                           ; #config settings
   286                           
   287     07FC                     __initialization:
   288     07FC                     end_of_initialization:	
   289                           ;End of C runtime variable initialization code
   290                           
   291     07FC                     __end_of__initialization:
   292     07FC  0183               	clrf	3
   293     07FD  120A  118A  2F80   	ljmp	_main	;jump to C main() function
   294                           
   295                           	psect	cstackCOMMON
   296     0070                     __pcstackCOMMON:
   297     0070                     ?_init_clcd:
   298     0070                     ?_init_config:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ?_main:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ?_clcd_write:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ?_init_display_controller:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     clcd_write@mode:	
   311                           ; 1 bytes @ 0x0
   312                           
   313                           
   314                           ; 1 bytes @ 0x0
   315     0070                     	ds	1
   316     0071                     ??_clcd_write:
   317                           
   318                           ; 1 bytes @ 0x1
   319     0071                     	ds	2
   320     0073                     clcd_write@byte:
   321                           
   322                           ; 1 bytes @ 0x3
   323     0073                     	ds	1
   324     0074                     ?_clcd_putch:
   325     0074                     ?_clcd_print:	
   326                           ; 1 bytes @ 0x4
   327                           
   328     0074                     ??_init_display_controller:	
   329                           ; 1 bytes @ 0x4
   330                           
   331     0074                     clcd_putch@addr:	
   332                           ; 1 bytes @ 0x4
   333                           
   334     0074                     clcd_print@addr:	
   335                           ; 1 bytes @ 0x4
   336                           
   337                           
   338                           ; 1 bytes @ 0x4
   339     0074                     	ds	1
   340     0075                     ??_clcd_putch:
   341     0075                     ??_clcd_print:	
   342                           ; 1 bytes @ 0x5
   343                           
   344     0075                     clcd_putch@data:	
   345                           ; 1 bytes @ 0x5
   346                           
   347     0075                     clcd_print@str:	
   348                           ; 1 bytes @ 0x5
   349                           
   350                           
   351                           ; 1 bytes @ 0x5
   352     0075                     	ds	1
   353     0076                     ??_init_clcd:
   354     0076                     ??_init_config:	
   355                           ; 1 bytes @ 0x6
   356                           
   357     0076                     ??_main:	
   358                           ; 1 bytes @ 0x6
   359                           
   360                           
   361                           	psect	maintext
   362     0780                     __pmaintext:	
   363                           ; 1 bytes @ 0x6
   364 ;;
   365 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   366 ;;
   367 ;; *************** function _main *****************
   368 ;; Defined at:
   369 ;;		line 14 in file "main.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : B00/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   383 ;;      Params:         0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0
   385 ;;      Temps:          0       0       0       0       0
   386 ;;      Totals:         0       0       0       0       0
   387 ;;Total ram usage:        0 bytes
   388 ;; Hardware stack levels required when called: 4
   389 ;; This function calls:
   390 ;;		_clcd_print
   391 ;;		_clcd_putch
   392 ;;		_init_config
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398     0780                     _main:	
   399                           ;psect for function _main
   400                           
   401     0780                     l697:	
   402                           ;incstack = 0
   403                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   404                           
   405     0780  120A  118A  2716  120A  118A  	fcall	_init_config
   406     0785                     l14:
   407     0785  3080               	movlw	128
   408     0786  00F4               	movwf	clcd_putch@addr
   409     0787  3016               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   410     0788  120A  118A  2727  120A  118A  	fcall	_clcd_putch
   411     078D                     l699:
   412     078D  30C0               	movlw	192
   413     078E  00F4               	movwf	clcd_print@addr
   414     078F  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   415     0790  120A  118A  2758  120A  118A  	fcall	_clcd_print
   416     0795                     l701:
   417     0795  3090               	movlw	144
   418     0796  00F4               	movwf	clcd_print@addr
   419     0797  300A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   420     0798  120A  118A  2758  120A  118A  	fcall	_clcd_print
   421     079D                     l703:
   422     079D  30D0               	movlw	208
   423     079E  00F4               	movwf	clcd_print@addr
   424     079F  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   425     07A0  120A  118A  2758  120A  118A  	fcall	_clcd_print
   426     07A5  2F85               	goto	l14
   427     07A6  120A  118A  2800   	ljmp	start
   428     07A9                     __end_of_main:
   429                           
   430                           	psect	text1
   431     0716                     __ptext1:	
   432 ;; *************** function _init_config *****************
   433 ;; Defined at:
   434 ;;		line 10 in file "main.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0, pclath, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0
   451 ;;      Totals:         0       0       0       0       0
   452 ;;Total ram usage:        0 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; Hardware stack levels required when called: 3
   455 ;; This function calls:
   456 ;;		_init_clcd
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462     0716                     _init_config:	
   463                           ;psect for function _init_config
   464                           
   465     0716                     l685:	
   466                           ;incstack = 0
   467                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   468                           
   469                           
   470                           ;main.c: 11:         clcd_print("EMBEDDED", (0xD0 + 0));
   471     0716  120A  118A  271C  120A  118A  	fcall	_init_clcd
   472     071B                     l9:
   473     071B  0008               	return
   474     071C                     __end_of_init_config:
   475                           
   476                           	psect	text2
   477     071C                     __ptext2:	
   478 ;; *************** function _init_clcd *****************
   479 ;; Defined at:
   480 ;;		line 37 in file "clcd.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; Hardware stack levels required when called: 2
   501 ;; This function calls:
   502 ;;		_init_display_controller
   503 ;; This function is called by:
   504 ;;		_init_config
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508     071C                     _init_clcd:	
   509                           ;psect for function _init_clcd
   510                           
   511     071C                     l677:	
   512                           ;incstack = 0
   513                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   514                           
   515                           
   516                           ;clcd.c: 40:     TRISD = 0x00;
   517     071C  1683               	bsf	3,5	;RP0=1, select bank1
   518     071D  1303               	bcf	3,6	;RP1=0, select bank1
   519     071E  0188               	clrf	8	;volatile
   520     071F                     l679:
   521                           
   522                           ;clcd.c: 43:     TRISE2 = 0;
   523     071F  1109               	bcf	9,2	;volatile
   524     0720                     l681:
   525                           
   526                           ;clcd.c: 44:     TRISE1 = 0;
   527     0720  1089               	bcf	9,1	;volatile
   528     0721                     l683:
   529                           
   530                           ;clcd.c: 46:     init_display_controller();
   531     0721  120A  118A  27A9  120A  118A  	fcall	_init_display_controller
   532     0726                     l40:
   533     0726  0008               	return
   534     0727                     __end_of_init_clcd:
   535                           
   536                           	psect	text3
   537     07A9                     __ptext3:	
   538 ;; *************** function _init_display_controller *****************
   539 ;; Defined at:
   540 ;;		line 16 in file "clcd.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          2       0       0       0       0
   557 ;;      Totals:         2       0       0       0       0
   558 ;;Total ram usage:        2 bytes
   559 ;; Hardware stack levels used: 1
   560 ;; Hardware stack levels required when called: 1
   561 ;; This function calls:
   562 ;;		_clcd_write
   563 ;; This function is called by:
   564 ;;		_init_clcd
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568     07A9                     _init_display_controller:	
   569                           ;psect for function _init_display_controller
   570                           
   571     07A9                     l657:	
   572                           ;incstack = 0
   573                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   574                           
   575                           
   576                           ;clcd.c: 20:     _delay((unsigned long)((30)*(20000000/4000.0)));
   577     07A9  30C3               	movlw	195
   578     07AA  00F5               	movwf	??_init_display_controller+1
   579     07AB  30CD               	movlw	205
   580     07AC  00F4               	movwf	??_init_display_controller
   581     07AD                     u77:
   582     07AD  0BF4               	decfsz	??_init_display_controller,f
   583     07AE  2FAD               	goto	u77
   584     07AF  0BF5               	decfsz	??_init_display_controller+1,f
   585     07B0  2FAD               	goto	u77
   586     07B1                     l659:
   587                           
   588                           ;clcd.c: 23:     clcd_write(0x33, 0);
   589     07B1  01F0               	clrf	clcd_write@mode
   590     07B2  3033               	movlw	51
   591     07B3  120A  118A  2738  120A  118A  	fcall	_clcd_write
   592     07B8                     l661:
   593                           
   594                           ;clcd.c: 24:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   595     07B8  301B               	movlw	27
   596     07B9  00F5               	movwf	??_init_display_controller+1
   597     07BA  309E               	movlw	158
   598     07BB  00F4               	movwf	??_init_display_controller
   599     07BC                     u87:
   600     07BC  0BF4               	decfsz	??_init_display_controller,f
   601     07BD  2FBC               	goto	u87
   602     07BE  0BF5               	decfsz	??_init_display_controller+1,f
   603     07BF  2FBC               	goto	u87
   604     07C0  0000               	nop
   605                           
   606                           ;clcd.c: 25:     clcd_write(0x33, 0);
   607     07C1  01F0               	clrf	clcd_write@mode
   608     07C2  3033               	movlw	51
   609     07C3  120A  118A  2738  120A  118A  	fcall	_clcd_write
   610     07C8                     l663:
   611                           
   612                           ;clcd.c: 26:      _delay((unsigned long)((100)*(20000000/4000000.0)));
   613     07C8  30A6               	movlw	166
   614     07C9  00F4               	movwf	??_init_display_controller
   615     07CA                     u97:
   616     07CA  0BF4               	decfsz	??_init_display_controller,f
   617     07CB  2FCA               	goto	u97
   618     07CC  0000               	nop
   619     07CD                     l665:
   620                           
   621                           ;clcd.c: 27:     clcd_write(0x33, 0);
   622     07CD  01F0               	clrf	clcd_write@mode
   623     07CE  3033               	movlw	51
   624     07CF  120A  118A  2738  120A  118A  	fcall	_clcd_write
   625     07D4                     l667:
   626                           
   627                           ;clcd.c: 28:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   628     07D4  2FD5               	nop2	;2 cycle nop
   629     07D5  2FD6               	nop2	;2 cycle nop
   630     07D6  0000               	nop
   631     07D7                     l669:
   632                           
   633                           ;clcd.c: 29:     clcd_write(0x30, 0);
   634     07D7  01F0               	clrf	clcd_write@mode
   635     07D8  3030               	movlw	48
   636     07D9  120A  118A  2738  120A  118A  	fcall	_clcd_write
   637     07DE                     l671:
   638                           
   639                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   640     07DE  30A6               	movlw	166
   641     07DF  00F4               	movwf	??_init_display_controller
   642     07E0                     u107:
   643     07E0  0BF4               	decfsz	??_init_display_controller,f
   644     07E1  2FE0               	goto	u107
   645     07E2  0000               	nop
   646                           
   647                           ;clcd.c: 31:     clcd_write(0x01, 0);
   648     07E3  01F0               	clrf	clcd_write@mode
   649     07E4  3001               	movlw	1
   650     07E5  120A  118A  2738  120A  118A  	fcall	_clcd_write
   651     07EA                     l673:
   652                           
   653                           ;clcd.c: 32:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   654     07EA  30A6               	movlw	166
   655     07EB  00F4               	movwf	??_init_display_controller
   656     07EC                     u117:
   657     07EC  0BF4               	decfsz	??_init_display_controller,f
   658     07ED  2FEC               	goto	u117
   659     07EE  0000               	nop
   660     07EF                     l675:
   661                           
   662                           ;clcd.c: 33:     clcd_write(0x0C, 0);
   663     07EF  01F0               	clrf	clcd_write@mode
   664     07F0  300C               	movlw	12
   665     07F1  120A  118A  2738  120A  118A  	fcall	_clcd_write
   666                           
   667                           ;clcd.c: 34:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   668     07F6  30A6               	movlw	166
   669     07F7  00F4               	movwf	??_init_display_controller
   670     07F8                     u127:
   671     07F8  0BF4               	decfsz	??_init_display_controller,f
   672     07F9  2FF8               	goto	u127
   673     07FA  0000               	nop
   674     07FB                     l37:
   675     07FB  0008               	return
   676     07FC                     __end_of_init_display_controller:
   677                           
   678                           	psect	text4
   679     0727                     __ptext4:	
   680 ;; *************** function _clcd_putch *****************
   681 ;; Defined at:
   682 ;;		line 49 in file "clcd.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  data            1    wreg     const unsigned char 
   685 ;;  addr            1    4[COMMON] unsigned char 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  data            1    5[COMMON] const unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         1       0       0       0       0
   698 ;;      Locals:         1       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         2       0       0       0       0
   701 ;;Total ram usage:        2 bytes
   702 ;; Hardware stack levels used: 1
   703 ;; Hardware stack levels required when called: 1
   704 ;; This function calls:
   705 ;;		_clcd_write
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711     0727                     _clcd_putch:	
   712                           ;psect for function _clcd_putch
   713                           
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
   717                           ;clcd_putch@data stored from wreg
   718     0727  00F5               	movwf	clcd_putch@data
   719     0728                     l687:
   720                           
   721                           ;clcd.c: 49: void clcd_putch(const char data, unsigned char addr);clcd.c: 50: {;clcd.c: 
      +                          51:     clcd_write(addr, 0);
   722     0728  01F0               	clrf	clcd_write@mode
   723     0729  0874               	movf	clcd_putch@addr,w
   724     072A  120A  118A  2738  120A  118A  	fcall	_clcd_write
   725                           
   726                           ;clcd.c: 52:     clcd_write(data, 1);
   727     072F  01F0               	clrf	clcd_write@mode
   728     0730  0AF0               	incf	clcd_write@mode,f
   729     0731  0875               	movf	clcd_putch@data,w
   730     0732  120A  118A  2738  120A  118A  	fcall	_clcd_write
   731     0737                     l43:
   732     0737  0008               	return
   733     0738                     __end_of_clcd_putch:
   734                           
   735                           	psect	text5
   736     0758                     __ptext5:	
   737 ;; *************** function _clcd_print *****************
   738 ;; Defined at:
   739 ;;		line 55 in file "clcd.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  str             1    wreg     PTR const unsigned char 
   742 ;;		 -> STR_4(9), STR_3(6), STR_2(6), 
   743 ;;  addr            1    4[COMMON] unsigned char 
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  str             1    5[COMMON] PTR const unsigned char 
   746 ;;		 -> STR_4(9), STR_3(6), STR_2(6), 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         1       0       0       0       0
   757 ;;      Locals:         1       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0
   759 ;;      Totals:         2       0       0       0       0
   760 ;;Total ram usage:        2 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 1
   763 ;; This function calls:
   764 ;;		_clcd_write
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770     0758                     _clcd_print:	
   771                           ;psect for function _clcd_print
   772                           
   773                           
   774                           ;incstack = 0
   775                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   776                           ;clcd_print@str stored from wreg
   777     0758  00F5               	movwf	clcd_print@str
   778     0759                     l689:
   779                           
   780                           ;clcd.c: 55: void clcd_print(const char *str, unsigned char addr);clcd.c: 56: {;clcd.c: 
      +                          57:     clcd_write(addr, 0);
   781     0759  01F0               	clrf	clcd_write@mode
   782     075A  0874               	movf	clcd_print@addr,w
   783     075B  120A  118A  2738  120A  118A  	fcall	_clcd_write
   784                           
   785                           ;clcd.c: 59:     while (*str != '\0')
   786     0760  2F73               	goto	l695
   787     0761                     l691:
   788                           
   789                           ;clcd.c: 60:     {;clcd.c: 61:         clcd_write(*str, 1);
   790     0761  01F0               	clrf	clcd_write@mode
   791     0762  0AF0               	incf	clcd_write@mode,f
   792     0763  0875               	movf	clcd_print@str,w
   793     0764  0084               	movwf	4
   794     0765  120A  118A  2003  120A  118A  	fcall	stringdir
   795     076A  120A  118A  2738  120A  118A  	fcall	_clcd_write
   796     076F                     l693:
   797                           
   798                           ;clcd.c: 62:         str++;
   799     076F  3001               	movlw	1
   800     0770  00FF               	movwf	btemp+1
   801     0771  087F               	movf	btemp+1,w
   802     0772  07F5               	addwf	clcd_print@str,f
   803     0773                     l695:
   804                           
   805                           ;clcd.c: 59:     while (*str != '\0')
   806     0773  0875               	movf	clcd_print@str,w
   807     0774  0084               	movwf	4
   808     0775  120A  118A  2003  120A  118A  	fcall	stringdir
   809     077A  3A00               	xorlw	0
   810     077B  1D03               	skipz
   811     077C  2F7E               	goto	u61
   812     077D  2F7F               	goto	u60
   813     077E                     u61:
   814     077E  2F61               	goto	l691
   815     077F                     u60:
   816     077F                     l49:
   817     077F  0008               	return
   818     0780                     __end_of_clcd_print:
   819                           
   820                           	psect	text6
   821     0738                     __ptext6:	
   822 ;; *************** function _clcd_write *****************
   823 ;; Defined at:
   824 ;;		line 4 in file "clcd.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  byte            1    wreg     unsigned char 
   827 ;;  mode            1    0[COMMON] unsigned char 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  byte            1    3[COMMON] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         1       0       0       0       0
   840 ;;      Locals:         1       0       0       0       0
   841 ;;      Temps:          2       0       0       0       0
   842 ;;      Totals:         4       0       0       0       0
   843 ;;Total ram usage:        4 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_init_display_controller
   849 ;;		_clcd_putch
   850 ;;		_clcd_print
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854     0738                     _clcd_write:	
   855                           ;psect for function _clcd_write
   856                           
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _clcd_write: [wreg]
   860                           ;clcd_write@byte stored from wreg
   861     0738  00F3               	movwf	clcd_write@byte
   862     0739                     l649:
   863                           
   864                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = (__bit)mode;
   865     0739  1870               	btfsc	clcd_write@mode,0
   866     073A  2F3C               	goto	u41
   867     073B  2F40               	goto	u40
   868     073C                     u41:
   869     073C  1283               	bcf	3,5	;RP0=0, select bank0
   870     073D  1303               	bcf	3,6	;RP1=0, select bank0
   871     073E  1509               	bsf	9,2	;volatile
   872     073F  2F43               	goto	u54
   873     0740                     u40:
   874     0740  1283               	bcf	3,5	;RP0=0, select bank0
   875     0741  1303               	bcf	3,6	;RP1=0, select bank0
   876     0742  1109               	bcf	9,2	;volatile
   877     0743                     u54:
   878     0743                     l651:
   879                           
   880                           ;clcd.c: 7:     PORTD = byte;
   881     0743  0873               	movf	clcd_write@byte,w
   882     0744  0088               	movwf	8	;volatile
   883     0745                     l653:
   884                           
   885                           ;clcd.c: 9:     RE1 = 1;
   886     0745  1489               	bsf	9,1	;volatile
   887                           
   888                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   889     0746  30A6               	movlw	166
   890     0747  00F1               	movwf	??_clcd_write
   891     0748                     u137:
   892     0748  0BF1               	decfsz	??_clcd_write,f
   893     0749  2F48               	goto	u137
   894     074A  0000               	nop
   895     074B                     l655:
   896                           
   897                           ;clcd.c: 11:     RE1 = 0;
   898     074B  1283               	bcf	3,5	;RP0=0, select bank0
   899     074C  1303               	bcf	3,6	;RP1=0, select bank0
   900     074D  1089               	bcf	9,1	;volatile
   901                           
   902                           ;clcd.c: 13:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   903     074E  301B               	movlw	27
   904     074F  00F2               	movwf	??_clcd_write+1
   905     0750  309E               	movlw	158
   906     0751  00F1               	movwf	??_clcd_write
   907     0752                     u147:
   908     0752  0BF1               	decfsz	??_clcd_write,f
   909     0753  2F52               	goto	u147
   910     0754  0BF2               	decfsz	??_clcd_write+1,f
   911     0755  2F52               	goto	u147
   912     0756  0000               	nop
   913     0757                     l34:
   914     0757  0008               	return
   915     0758                     __end_of_clcd_write:
   916     007E                     btemp	set	126	;btemp
   917     007E                     wtemp0	set	126
   918                           
   919                           	psect	idloc
   920                           
   921                           ;Config register IDLOC0 @ 0x2000
   922                           ;	unspecified, using default values
   923     2000                     	org	8192
   924     2000  3FFF               	dw	16383
   925                           
   926                           ;Config register IDLOC1 @ 0x2001
   927                           ;	unspecified, using default values
   928     2001                     	org	8193
   929     2001  3FFF               	dw	16383
   930                           
   931                           ;Config register IDLOC2 @ 0x2002
   932                           ;	unspecified, using default values
   933     2002                     	org	8194
   934     2002  3FFF               	dw	16383
   935                           
   936                           ;Config register IDLOC3 @ 0x2003
   937                           ;	unspecified, using default values
   938     2003                     	org	8195
   939     2003  3FFF               	dw	16383
   940                           
   941                           	psect	config
   942                           
   943                           ;Config register CONFIG @ 0x2007
   944                           ;	Oscillator Selection bits
   945                           ;	FOSC = 0x3, unprogrammed default
   946                           ;	Watchdog Timer Enable bit
   947                           ;	WDTE = OFF, WDT disabled
   948                           ;	Power-up Timer Enable bit
   949                           ;	PWRTE = 0x1, unprogrammed default
   950                           ;	Brown-out Reset Enable bit
   951                           ;	BOREN = 0x1, unprogrammed default
   952                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   953                           ;	LVP = 0x1, unprogrammed default
   954                           ;	Data EEPROM Memory Code Protection bit
   955                           ;	CPD = 0x1, unprogrammed default
   956                           ;	Flash Program Memory Write Enable bits
   957                           ;	WRT = 0x3, unprogrammed default
   958                           ;	In-Circuit Debugger Mode bit
   959                           ;	DEBUG = 0x1, unprogrammed default
   960                           ;	Flash Program Memory Code Protection bit
   961                           ;	CP = 0x1, unprogrammed default
   962     2007                     	org	8199
   963     2007  3FFB               	dw	16379

Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[6]), STR_3(CODE[6]), STR_4(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _main->_clcd_putch
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2926
                         _clcd_print
                         _clcd_putch
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1     924
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           2     1      1    1198
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Nov 03 10:05:45 2023

                              l9 071B                                pc 0002                   clcd_print@addr 0074  
                             l14 0785                               l40 0726                               l34 0757  
                             l43 0737                               l37 07FB                               l49 077F  
                             u40 0740                               u41 073C                               u60 077F  
                             u61 077E                               u54 0743                               u77 07AD  
                             u87 07BC                               u97 07CA                               fsr 0004  
                            l701 0795                              l703 079D                              l651 0743  
                            l653 0745                              l661 07B8                              l655 074B  
                            l671 07DE                              l663 07C8                              l649 0739  
                            l673 07EA                              l665 07CD                              l657 07A9  
                            l681 0720                              l691 0761                              l675 07EF  
                            l667 07D4                              l659 07B1                              l683 0721  
                            l693 076F                              l669 07D7                              l677 071C  
                            l685 0716                              l695 0773                              l687 0728  
                            l679 071F                              l689 0759                              l697 0780  
                            l699 078D                              _RE1 0049                              _RE2 004A  
                            u107 07E0                              u117 07EC                              u127 07F8  
                            u137 0748                              u147 0752                   clcd_putch@addr 0074  
                            fsr0 0004                   clcd_putch@data 0075                             STR_1 001E  
                           STR_2 0018                             STR_3 0012                             STR_4 0009  
                           _main 0780                             btemp 007E                             start 0000  
                 clcd_write@byte 0073                   clcd_write@mode 0070                            ?_main 0070  
                   ?_init_config 0070                            _PORTD 0008                            _TRISD 0088  
                          pclath 000A                            status 0003                            wtemp0 007E  
                __initialization 07FC                     __end_of_main 07A9                           ??_main 0076  
                         _TRISE1 0449                           _TRISE2 044A          _init_display_controller 07A9  
        __end_of__initialization 07FC                   __pcstackCOMMON 0070        ??_init_display_controller 0074  
                     _clcd_print 0758                       _clcd_putch 0727                       _clcd_write 0738  
                     __pmaintext 0780                       __stringtab 0003                          __ptext1 0716  
                        __ptext2 071C                          __ptext3 07A9                          __ptext4 0727  
                        __ptext5 0758                          __ptext6 0738  __end_of_init_display_controller 07FC  
              __end_of_init_clcd 0727             end_of_initialization 07FC                      ?_clcd_print 0074  
                    ?_clcd_putch 0074                      ?_clcd_write 0070                    clcd_print@str 0075  
            start_initialization 07FC                    ??_init_config 0076                        ___latbits 0002  
                      __pstrings 0003                        _init_clcd 071C              __end_of_init_config 071C  
       ?_init_display_controller 0070                     ??_clcd_print 0075                     ??_clcd_putch 0075  
                   ??_clcd_write 0071                      __stringbase 0008               __end_of_clcd_print 0780  
             __end_of_clcd_putch 0738               __end_of_clcd_write 0758                       ?_init_clcd 0070  
             __end_of__stringtab 0009                      _init_config 0716                      ??_init_clcd 0076  
                      stringcode 0003                         stringdir 0003                         stringtab 0003  
