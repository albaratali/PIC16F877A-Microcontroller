

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Nov 03 10:16:48 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 18/08/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0008                     _PORTD	set	8
   233     0049                     _RE1	set	73
   234     004A                     _RE2	set	74
   235     0088                     _TRISD	set	136
   236     0449                     _TRISE1	set	1097
   237     044A                     _TRISE2	set	1098
   238                           
   239                           	psect	strings
   240     0003                     __pstrings:
   241     0003                     stringtab:
   242     0003                     __stringtab:
   243     0003                     stringcode:	
   244                           ;	String table - string pointers are 1 byte each
   245                           
   246     0003                     stringdir:
   247     0003  3000               	movlw	high stringdir
   248     0004  008A               	movwf	10
   249     0005  0804               	movf	4,w
   250     0006  0A84               	incf	4,f
   251     0007  0782               	addwf	2,f
   252     0008                     __stringbase:
   253     0008  3400               	retlw	0
   254     0009                     __end_of__stringtab:
   255     0009                     STR_3:
   256     0009  3445               	retlw	69	;'E'
   257     000A  344D               	retlw	77	;'M'
   258     000B  3442               	retlw	66	;'B'
   259     000C  3445               	retlw	69	;'E'
   260     000D  3444               	retlw	68	;'D'
   261     000E  3444               	retlw	68	;'D'
   262     000F  3445               	retlw	69	;'E'
   263     0010  3444               	retlw	68	;'D'
   264     0011  3400               	retlw	0
   265     0012                     STR_2:
   266     0012  3457               	retlw	87	;'W'
   267     0013  346F               	retlw	111	;'o'
   268     0014  3472               	retlw	114	;'r'
   269     0015  346C               	retlw	108	;'l'
   270     0016  3464               	retlw	100	;'d'
   271     0017  3400               	retlw	0
   272     0018                     STR_1:
   273     0018  3448               	retlw	72	;'H'
   274     0019  3465               	retlw	101	;'e'
   275     001A  346C               	retlw	108	;'l'
   276     001B  346C               	retlw	108	;'l'
   277     001C  346F               	retlw	111	;'o'
   278     001D  3400               	retlw	0
   279                           
   280                           	psect	cinit
   281     07FC                     start_initialization:	
   282                           ; #config settings
   283                           
   284     07FC                     __initialization:
   285     07FC                     end_of_initialization:	
   286                           ;End of C runtime variable initialization code
   287                           
   288     07FC                     __end_of__initialization:
   289     07FC  0183               	clrf	3
   290     07FD  120A  118A  2F80   	ljmp	_main	;jump to C main() function
   291                           
   292                           	psect	cstackCOMMON
   293     0070                     __pcstackCOMMON:
   294     0070                     ?_init_clcd:
   295     0070                     ?_init_config:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ?_main:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ?_clcd_write:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ?_init_display_controller:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     clcd_write@mode:	
   308                           ; 1 bytes @ 0x0
   309                           
   310                           
   311                           ; 1 bytes @ 0x0
   312     0070                     	ds	1
   313     0071                     ??_clcd_write:
   314                           
   315                           ; 1 bytes @ 0x1
   316     0071                     	ds	2
   317     0073                     clcd_write@byte:
   318                           
   319                           ; 1 bytes @ 0x3
   320     0073                     	ds	1
   321     0074                     ?_clcd_putch:
   322     0074                     ?_clcd_print:	
   323                           ; 1 bytes @ 0x4
   324                           
   325     0074                     ??_init_display_controller:	
   326                           ; 1 bytes @ 0x4
   327                           
   328     0074                     clcd_putch@addr:	
   329                           ; 1 bytes @ 0x4
   330                           
   331     0074                     clcd_print@addr:	
   332                           ; 1 bytes @ 0x4
   333                           
   334                           
   335                           ; 1 bytes @ 0x4
   336     0074                     	ds	1
   337     0075                     ??_clcd_putch:
   338     0075                     ??_clcd_print:	
   339                           ; 1 bytes @ 0x5
   340                           
   341     0075                     clcd_putch@data:	
   342                           ; 1 bytes @ 0x5
   343                           
   344     0075                     clcd_print@str:	
   345                           ; 1 bytes @ 0x5
   346                           
   347                           
   348                           ; 1 bytes @ 0x5
   349     0075                     	ds	1
   350     0076                     ??_init_clcd:
   351     0076                     ??_init_config:	
   352                           ; 1 bytes @ 0x6
   353                           
   354     0076                     ??_main:	
   355                           ; 1 bytes @ 0x6
   356                           
   357                           
   358                           	psect	maintext
   359     0780                     __pmaintext:	
   360                           ; 1 bytes @ 0x6
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 14 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : B00/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         0       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0
   383 ;;      Totals:         0       0       0       0       0
   384 ;;Total ram usage:        0 bytes
   385 ;; Hardware stack levels required when called: 4
   386 ;; This function calls:
   387 ;;		_clcd_print
   388 ;;		_clcd_putch
   389 ;;		_init_config
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395     0780                     _main:	
   396                           ;psect for function _main
   397                           
   398     0780                     l697:	
   399                           ;incstack = 0
   400                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   401                           
   402     0780  120A  118A  2716  120A  118A  	fcall	_init_config
   403     0785                     l14:
   404     0785  3080               	movlw	128
   405     0786  00F4               	movwf	clcd_putch@addr
   406     0787  3030               	movlw	48
   407     0788  120A  118A  2727  120A  118A  	fcall	_clcd_putch
   408     078D                     l699:
   409     078D  30C0               	movlw	192
   410     078E  00F4               	movwf	clcd_print@addr
   411     078F  3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   412     0790  120A  118A  2758  120A  118A  	fcall	_clcd_print
   413     0795                     l701:
   414     0795  3093               	movlw	147
   415     0796  00F4               	movwf	clcd_print@addr
   416     0797  300A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   417     0798  120A  118A  2758  120A  118A  	fcall	_clcd_print
   418     079D                     l703:
   419     079D  30D6               	movlw	214
   420     079E  00F4               	movwf	clcd_print@addr
   421     079F  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   422     07A0  120A  118A  2758  120A  118A  	fcall	_clcd_print
   423     07A5  2F85               	goto	l14
   424     07A6  120A  118A  2800   	ljmp	start
   425     07A9                     __end_of_main:
   426                           
   427                           	psect	text1
   428     0716                     __ptext1:	
   429 ;; *************** function _init_config *****************
   430 ;; Defined at:
   431 ;;		line 10 in file "main.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   445 ;;      Params:         0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0
   447 ;;      Temps:          0       0       0       0       0
   448 ;;      Totals:         0       0       0       0       0
   449 ;;Total ram usage:        0 bytes
   450 ;; Hardware stack levels used: 1
   451 ;; Hardware stack levels required when called: 3
   452 ;; This function calls:
   453 ;;		_init_clcd
   454 ;; This function is called by:
   455 ;;		_main
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459     0716                     _init_config:	
   460                           ;psect for function _init_config
   461                           
   462     0716                     l685:	
   463                           ;incstack = 0
   464                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   465                           
   466                           
   467                           ;main.c: 11:         clcd_print("EMBEDDED", (0xD0 + 6));
   468     0716  120A  118A  271C  120A  118A  	fcall	_init_clcd
   469     071B                     l9:
   470     071B  0008               	return
   471     071C                     __end_of_init_config:
   472                           
   473                           	psect	text2
   474     071C                     __ptext2:	
   475 ;; *************** function _init_clcd *****************
   476 ;; Defined at:
   477 ;;		line 37 in file "clcd.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used: 1
   497 ;; Hardware stack levels required when called: 2
   498 ;; This function calls:
   499 ;;		_init_display_controller
   500 ;; This function is called by:
   501 ;;		_init_config
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505     071C                     _init_clcd:	
   506                           ;psect for function _init_clcd
   507                           
   508     071C                     l677:	
   509                           ;incstack = 0
   510                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   511                           
   512                           
   513                           ;clcd.c: 40:     TRISD = 0x00;
   514     071C  1683               	bsf	3,5	;RP0=1, select bank1
   515     071D  1303               	bcf	3,6	;RP1=0, select bank1
   516     071E  0188               	clrf	8	;volatile
   517     071F                     l679:
   518                           
   519                           ;clcd.c: 43:     TRISE2 = 0;
   520     071F  1109               	bcf	9,2	;volatile
   521     0720                     l681:
   522                           
   523                           ;clcd.c: 44:     TRISE1 = 0;
   524     0720  1089               	bcf	9,1	;volatile
   525     0721                     l683:
   526                           
   527                           ;clcd.c: 46:     init_display_controller();
   528     0721  120A  118A  27A9  120A  118A  	fcall	_init_display_controller
   529     0726                     l40:
   530     0726  0008               	return
   531     0727                     __end_of_init_clcd:
   532                           
   533                           	psect	text3
   534     07A9                     __ptext3:	
   535 ;; *************** function _init_display_controller *****************
   536 ;; Defined at:
   537 ;;		line 16 in file "clcd.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0, pclath, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   551 ;;      Params:         0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0
   553 ;;      Temps:          2       0       0       0       0
   554 ;;      Totals:         2       0       0       0       0
   555 ;;Total ram usage:        2 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; Hardware stack levels required when called: 1
   558 ;; This function calls:
   559 ;;		_clcd_write
   560 ;; This function is called by:
   561 ;;		_init_clcd
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565     07A9                     _init_display_controller:	
   566                           ;psect for function _init_display_controller
   567                           
   568     07A9                     l657:	
   569                           ;incstack = 0
   570                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   571                           
   572                           
   573                           ;clcd.c: 20:     _delay((unsigned long)((30)*(20000000/4000.0)));
   574     07A9  30C3               	movlw	195
   575     07AA  00F5               	movwf	??_init_display_controller+1
   576     07AB  30CD               	movlw	205
   577     07AC  00F4               	movwf	??_init_display_controller
   578     07AD                     u77:
   579     07AD  0BF4               	decfsz	??_init_display_controller,f
   580     07AE  2FAD               	goto	u77
   581     07AF  0BF5               	decfsz	??_init_display_controller+1,f
   582     07B0  2FAD               	goto	u77
   583     07B1                     l659:
   584                           
   585                           ;clcd.c: 23:     clcd_write(0x33, 0);
   586     07B1  01F0               	clrf	clcd_write@mode
   587     07B2  3033               	movlw	51
   588     07B3  120A  118A  2738  120A  118A  	fcall	_clcd_write
   589     07B8                     l661:
   590                           
   591                           ;clcd.c: 24:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   592     07B8  301B               	movlw	27
   593     07B9  00F5               	movwf	??_init_display_controller+1
   594     07BA  309E               	movlw	158
   595     07BB  00F4               	movwf	??_init_display_controller
   596     07BC                     u87:
   597     07BC  0BF4               	decfsz	??_init_display_controller,f
   598     07BD  2FBC               	goto	u87
   599     07BE  0BF5               	decfsz	??_init_display_controller+1,f
   600     07BF  2FBC               	goto	u87
   601     07C0  0000               	nop
   602                           
   603                           ;clcd.c: 25:     clcd_write(0x33, 0);
   604     07C1  01F0               	clrf	clcd_write@mode
   605     07C2  3033               	movlw	51
   606     07C3  120A  118A  2738  120A  118A  	fcall	_clcd_write
   607     07C8                     l663:
   608                           
   609                           ;clcd.c: 26:      _delay((unsigned long)((100)*(20000000/4000000.0)));
   610     07C8  30A6               	movlw	166
   611     07C9  00F4               	movwf	??_init_display_controller
   612     07CA                     u97:
   613     07CA  0BF4               	decfsz	??_init_display_controller,f
   614     07CB  2FCA               	goto	u97
   615     07CC  0000               	nop
   616     07CD                     l665:
   617                           
   618                           ;clcd.c: 27:     clcd_write(0x33, 0);
   619     07CD  01F0               	clrf	clcd_write@mode
   620     07CE  3033               	movlw	51
   621     07CF  120A  118A  2738  120A  118A  	fcall	_clcd_write
   622     07D4                     l667:
   623                           
   624                           ;clcd.c: 28:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   625     07D4  2FD5               	nop2	;2 cycle nop
   626     07D5  2FD6               	nop2	;2 cycle nop
   627     07D6  0000               	nop
   628     07D7                     l669:
   629                           
   630                           ;clcd.c: 29:     clcd_write(0x30, 0);
   631     07D7  01F0               	clrf	clcd_write@mode
   632     07D8  3030               	movlw	48
   633     07D9  120A  118A  2738  120A  118A  	fcall	_clcd_write
   634     07DE                     l671:
   635                           
   636                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   637     07DE  30A6               	movlw	166
   638     07DF  00F4               	movwf	??_init_display_controller
   639     07E0                     u107:
   640     07E0  0BF4               	decfsz	??_init_display_controller,f
   641     07E1  2FE0               	goto	u107
   642     07E2  0000               	nop
   643                           
   644                           ;clcd.c: 31:     clcd_write(0x01, 0);
   645     07E3  01F0               	clrf	clcd_write@mode
   646     07E4  3001               	movlw	1
   647     07E5  120A  118A  2738  120A  118A  	fcall	_clcd_write
   648     07EA                     l673:
   649                           
   650                           ;clcd.c: 32:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   651     07EA  30A6               	movlw	166
   652     07EB  00F4               	movwf	??_init_display_controller
   653     07EC                     u117:
   654     07EC  0BF4               	decfsz	??_init_display_controller,f
   655     07ED  2FEC               	goto	u117
   656     07EE  0000               	nop
   657     07EF                     l675:
   658                           
   659                           ;clcd.c: 33:     clcd_write(0x0C, 0);
   660     07EF  01F0               	clrf	clcd_write@mode
   661     07F0  300C               	movlw	12
   662     07F1  120A  118A  2738  120A  118A  	fcall	_clcd_write
   663                           
   664                           ;clcd.c: 34:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   665     07F6  30A6               	movlw	166
   666     07F7  00F4               	movwf	??_init_display_controller
   667     07F8                     u127:
   668     07F8  0BF4               	decfsz	??_init_display_controller,f
   669     07F9  2FF8               	goto	u127
   670     07FA  0000               	nop
   671     07FB                     l37:
   672     07FB  0008               	return
   673     07FC                     __end_of_init_display_controller:
   674                           
   675                           	psect	text4
   676     0727                     __ptext4:	
   677 ;; *************** function _clcd_putch *****************
   678 ;; Defined at:
   679 ;;		line 49 in file "clcd.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  data            1    wreg     const unsigned char 
   682 ;;  addr            1    4[COMMON] unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  data            1    5[COMMON] const unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, pclath, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         1       0       0       0       0
   695 ;;      Locals:         1       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0
   697 ;;      Totals:         2       0       0       0       0
   698 ;;Total ram usage:        2 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 1
   701 ;; This function calls:
   702 ;;		_clcd_write
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708     0727                     _clcd_putch:	
   709                           ;psect for function _clcd_putch
   710                           
   711                           
   712                           ;incstack = 0
   713                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
   714                           ;clcd_putch@data stored from wreg
   715     0727  00F5               	movwf	clcd_putch@data
   716     0728                     l687:
   717                           
   718                           ;clcd.c: 49: void clcd_putch(const char data, unsigned char addr);clcd.c: 50: {;clcd.c: 
      +                          51:     clcd_write(addr, 0);
   719     0728  01F0               	clrf	clcd_write@mode
   720     0729  0874               	movf	clcd_putch@addr,w
   721     072A  120A  118A  2738  120A  118A  	fcall	_clcd_write
   722                           
   723                           ;clcd.c: 52:     clcd_write(data, 1);
   724     072F  01F0               	clrf	clcd_write@mode
   725     0730  0AF0               	incf	clcd_write@mode,f
   726     0731  0875               	movf	clcd_putch@data,w
   727     0732  120A  118A  2738  120A  118A  	fcall	_clcd_write
   728     0737                     l43:
   729     0737  0008               	return
   730     0738                     __end_of_clcd_putch:
   731                           
   732                           	psect	text5
   733     0758                     __ptext5:	
   734 ;; *************** function _clcd_print *****************
   735 ;; Defined at:
   736 ;;		line 55 in file "clcd.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;  str             1    wreg     PTR const unsigned char 
   739 ;;		 -> STR_3(9), STR_2(6), STR_1(6), 
   740 ;;  addr            1    4[COMMON] unsigned char 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  str             1    5[COMMON] PTR const unsigned char 
   743 ;;		 -> STR_3(9), STR_2(6), STR_1(6), 
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   753 ;;      Params:         1       0       0       0       0
   754 ;;      Locals:         1       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0
   756 ;;      Totals:         2       0       0       0       0
   757 ;;Total ram usage:        2 bytes
   758 ;; Hardware stack levels used: 1
   759 ;; Hardware stack levels required when called: 1
   760 ;; This function calls:
   761 ;;		_clcd_write
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767     0758                     _clcd_print:	
   768                           ;psect for function _clcd_print
   769                           
   770                           
   771                           ;incstack = 0
   772                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   773                           ;clcd_print@str stored from wreg
   774     0758  00F5               	movwf	clcd_print@str
   775     0759                     l689:
   776                           
   777                           ;clcd.c: 55: void clcd_print(const char *str, unsigned char addr);clcd.c: 56: {;clcd.c: 
      +                          57:     clcd_write(addr, 0);
   778     0759  01F0               	clrf	clcd_write@mode
   779     075A  0874               	movf	clcd_print@addr,w
   780     075B  120A  118A  2738  120A  118A  	fcall	_clcd_write
   781                           
   782                           ;clcd.c: 59:     while (*str != '\0')
   783     0760  2F73               	goto	l695
   784     0761                     l691:
   785                           
   786                           ;clcd.c: 60:     {;clcd.c: 61:         clcd_write(*str, 1);
   787     0761  01F0               	clrf	clcd_write@mode
   788     0762  0AF0               	incf	clcd_write@mode,f
   789     0763  0875               	movf	clcd_print@str,w
   790     0764  0084               	movwf	4
   791     0765  120A  118A  2003  120A  118A  	fcall	stringdir
   792     076A  120A  118A  2738  120A  118A  	fcall	_clcd_write
   793     076F                     l693:
   794                           
   795                           ;clcd.c: 62:         str++;
   796     076F  3001               	movlw	1
   797     0770  00FF               	movwf	btemp+1
   798     0771  087F               	movf	btemp+1,w
   799     0772  07F5               	addwf	clcd_print@str,f
   800     0773                     l695:
   801                           
   802                           ;clcd.c: 59:     while (*str != '\0')
   803     0773  0875               	movf	clcd_print@str,w
   804     0774  0084               	movwf	4
   805     0775  120A  118A  2003  120A  118A  	fcall	stringdir
   806     077A  3A00               	xorlw	0
   807     077B  1D03               	skipz
   808     077C  2F7E               	goto	u61
   809     077D  2F7F               	goto	u60
   810     077E                     u61:
   811     077E  2F61               	goto	l691
   812     077F                     u60:
   813     077F                     l49:
   814     077F  0008               	return
   815     0780                     __end_of_clcd_print:
   816                           
   817                           	psect	text6
   818     0738                     __ptext6:	
   819 ;; *************** function _clcd_write *****************
   820 ;; Defined at:
   821 ;;		line 4 in file "clcd.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  byte            1    wreg     unsigned char 
   824 ;;  mode            1    0[COMMON] unsigned char 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  byte            1    3[COMMON] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         1       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0
   838 ;;      Temps:          2       0       0       0       0
   839 ;;      Totals:         4       0       0       0       0
   840 ;;Total ram usage:        4 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_init_display_controller
   846 ;;		_clcd_putch
   847 ;;		_clcd_print
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851     0738                     _clcd_write:	
   852                           ;psect for function _clcd_write
   853                           
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _clcd_write: [wreg]
   857                           ;clcd_write@byte stored from wreg
   858     0738  00F3               	movwf	clcd_write@byte
   859     0739                     l649:
   860                           
   861                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = (__bit)mode;
   862     0739  1870               	btfsc	clcd_write@mode,0
   863     073A  2F3C               	goto	u41
   864     073B  2F40               	goto	u40
   865     073C                     u41:
   866     073C  1283               	bcf	3,5	;RP0=0, select bank0
   867     073D  1303               	bcf	3,6	;RP1=0, select bank0
   868     073E  1509               	bsf	9,2	;volatile
   869     073F  2F43               	goto	u54
   870     0740                     u40:
   871     0740  1283               	bcf	3,5	;RP0=0, select bank0
   872     0741  1303               	bcf	3,6	;RP1=0, select bank0
   873     0742  1109               	bcf	9,2	;volatile
   874     0743                     u54:
   875     0743                     l651:
   876                           
   877                           ;clcd.c: 7:     PORTD = byte;
   878     0743  0873               	movf	clcd_write@byte,w
   879     0744  0088               	movwf	8	;volatile
   880     0745                     l653:
   881                           
   882                           ;clcd.c: 9:     RE1 = 1;
   883     0745  1489               	bsf	9,1	;volatile
   884                           
   885                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   886     0746  30A6               	movlw	166
   887     0747  00F1               	movwf	??_clcd_write
   888     0748                     u137:
   889     0748  0BF1               	decfsz	??_clcd_write,f
   890     0749  2F48               	goto	u137
   891     074A  0000               	nop
   892     074B                     l655:
   893                           
   894                           ;clcd.c: 11:     RE1 = 0;
   895     074B  1283               	bcf	3,5	;RP0=0, select bank0
   896     074C  1303               	bcf	3,6	;RP1=0, select bank0
   897     074D  1089               	bcf	9,1	;volatile
   898                           
   899                           ;clcd.c: 13:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   900     074E  301B               	movlw	27
   901     074F  00F2               	movwf	??_clcd_write+1
   902     0750  309E               	movlw	158
   903     0751  00F1               	movwf	??_clcd_write
   904     0752                     u147:
   905     0752  0BF1               	decfsz	??_clcd_write,f
   906     0753  2F52               	goto	u147
   907     0754  0BF2               	decfsz	??_clcd_write+1,f
   908     0755  2F52               	goto	u147
   909     0756  0000               	nop
   910     0757                     l34:
   911     0757  0008               	return
   912     0758                     __end_of_clcd_write:
   913     007E                     btemp	set	126	;btemp
   914     007E                     wtemp0	set	126
   915                           
   916                           	psect	idloc
   917                           
   918                           ;Config register IDLOC0 @ 0x2000
   919                           ;	unspecified, using default values
   920     2000                     	org	8192
   921     2000  3FFF               	dw	16383
   922                           
   923                           ;Config register IDLOC1 @ 0x2001
   924                           ;	unspecified, using default values
   925     2001                     	org	8193
   926     2001  3FFF               	dw	16383
   927                           
   928                           ;Config register IDLOC2 @ 0x2002
   929                           ;	unspecified, using default values
   930     2002                     	org	8194
   931     2002  3FFF               	dw	16383
   932                           
   933                           ;Config register IDLOC3 @ 0x2003
   934                           ;	unspecified, using default values
   935     2003                     	org	8195
   936     2003  3FFF               	dw	16383
   937                           
   938                           	psect	config
   939                           
   940                           ;Config register CONFIG @ 0x2007
   941                           ;	Oscillator Selection bits
   942                           ;	FOSC = 0x3, unprogrammed default
   943                           ;	Watchdog Timer Enable bit
   944                           ;	WDTE = OFF, WDT disabled
   945                           ;	Power-up Timer Enable bit
   946                           ;	PWRTE = 0x1, unprogrammed default
   947                           ;	Brown-out Reset Enable bit
   948                           ;	BOREN = 0x1, unprogrammed default
   949                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   950                           ;	LVP = 0x1, unprogrammed default
   951                           ;	Data EEPROM Memory Code Protection bit
   952                           ;	CPD = 0x1, unprogrammed default
   953                           ;	Flash Program Memory Write Enable bits
   954                           ;	WRT = 0x3, unprogrammed default
   955                           ;	In-Circuit Debugger Mode bit
   956                           ;	DEBUG = 0x1, unprogrammed default
   957                           ;	Flash Program Memory Code Protection bit
   958                           ;	CP = 0x1, unprogrammed default
   959     2007                     	org	8199
   960     2007  3FFB               	dw	16379

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[6]), STR_2(CODE[6]), STR_3(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _main->_clcd_putch
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2926
                         _clcd_print
                         _clcd_putch
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1     924
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           2     1      1    1198
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Nov 03 10:16:48 2023

                              l9 071B                                pc 0002                   clcd_print@addr 0074  
                             l14 0785                               l40 0726                               l34 0757  
                             l43 0737                               l37 07FB                               l49 077F  
                             u40 0740                               u41 073C                               u60 077F  
                             u61 077E                               u54 0743                               u77 07AD  
                             u87 07BC                               u97 07CA                               fsr 0004  
                            l701 0795                              l703 079D                              l651 0743  
                            l653 0745                              l661 07B8                              l655 074B  
                            l671 07DE                              l663 07C8                              l649 0739  
                            l673 07EA                              l665 07CD                              l657 07A9  
                            l681 0720                              l691 0761                              l675 07EF  
                            l667 07D4                              l659 07B1                              l683 0721  
                            l693 076F                              l669 07D7                              l677 071C  
                            l685 0716                              l695 0773                              l687 0728  
                            l679 071F                              l689 0759                              l697 0780  
                            l699 078D                              _RE1 0049                              _RE2 004A  
                            u107 07E0                              u117 07EC                              u127 07F8  
                            u137 0748                              u147 0752                   clcd_putch@addr 0074  
                            fsr0 0004                   clcd_putch@data 0075                             STR_1 0018  
                           STR_2 0012                             STR_3 0009                             _main 0780  
                           btemp 007E                             start 0000                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                     ?_init_config 0070  
                          _PORTD 0008                            _TRISD 0088                            pclath 000A  
                          status 0003                            wtemp0 007E                  __initialization 07FC  
                   __end_of_main 07A9                           ??_main 0076                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 07A9          __end_of__initialization 07FC  
                 __pcstackCOMMON 0070        ??_init_display_controller 0074                       _clcd_print 0758  
                     _clcd_putch 0727                       _clcd_write 0738                       __pmaintext 0780  
                     __stringtab 0003                          __ptext1 0716                          __ptext2 071C  
                        __ptext3 07A9                          __ptext4 0727                          __ptext5 0758  
                        __ptext6 0738  __end_of_init_display_controller 07FC                __end_of_init_clcd 0727  
           end_of_initialization 07FC                      ?_clcd_print 0074                      ?_clcd_putch 0074  
                    ?_clcd_write 0070                    clcd_print@str 0075              start_initialization 07FC  
                  ??_init_config 0076                        ___latbits 0002                        __pstrings 0003  
                      _init_clcd 071C              __end_of_init_config 071C         ?_init_display_controller 0070  
                   ??_clcd_print 0075                     ??_clcd_putch 0075                     ??_clcd_write 0071  
                    __stringbase 0008               __end_of_clcd_print 0780               __end_of_clcd_putch 0738  
             __end_of_clcd_write 0758                       ?_init_clcd 0070               __end_of__stringtab 0009  
                    _init_config 0716                      ??_init_clcd 0076                        stringcode 0003  
                       stringdir 0003                         stringtab 0003  
